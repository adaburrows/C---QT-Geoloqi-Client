#############################################################################
# Makefile for building: geoloqi
# Generated by qmake (2.01a) (Qt 4.6.2) on: Mon Nov 21 20:12:18 2011
# Project:  geoloqi.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile geoloqi.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		loqiwindow.cpp \
		qgeoloqi.cpp \
		qjson/serializerrunnable.cpp \
		qjson/serializer.cpp \
		qjson/qobjecthelper.cpp \
		qjson/parserrunnable.cpp \
		qjson/parser.cpp \
		qjson/json_scanner.cpp \
		qjson/json_parser.cc moc_loqiwindow.cpp \
		moc_qgeoloqi.cpp \
		moc_serializerrunnable.cpp \
		moc_parserrunnable.cpp
OBJECTS       = main.o \
		loqiwindow.o \
		qgeoloqi.o \
		serializerrunnable.o \
		serializer.o \
		qobjecthelper.o \
		parserrunnable.o \
		parser.o \
		json_scanner.o \
		json_parser.o \
		moc_loqiwindow.o \
		moc_qgeoloqi.o \
		moc_serializerrunnable.o \
		moc_parserrunnable.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		geoloqi.pro
QMAKE_TARGET  = geoloqi
DESTDIR       = 
TARGET        = geoloqi

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: geoloqi.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile geoloqi.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile geoloqi.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/geoloqi1.0.0 || $(MKDIR) .tmp/geoloqi1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/geoloqi1.0.0/ && $(COPY_FILE) --parents loqiwindow.h qgeoloqi.h qjson/stack.hh qjson/serializerrunnable.h qjson/serializer.h qjson/qobjecthelper.h qjson/qjson_export.h qjson/qjson_debug.h qjson/position.hh qjson/parserrunnable.h qjson/parser_p.h qjson/parser.h qjson/location.hh qjson/json_scanner.h qjson/json_parser.hh .tmp/geoloqi1.0.0/ && $(COPY_FILE) --parents main.cpp loqiwindow.cpp qgeoloqi.cpp qjson/serializerrunnable.cpp qjson/serializer.cpp qjson/qobjecthelper.cpp qjson/parserrunnable.cpp qjson/parser.cpp qjson/json_scanner.cpp qjson/json_parser.cc .tmp/geoloqi1.0.0/ && (cd `dirname .tmp/geoloqi1.0.0` && $(TAR) geoloqi1.0.0.tar geoloqi1.0.0 && $(COMPRESS) geoloqi1.0.0.tar) && $(MOVE) `dirname .tmp/geoloqi1.0.0`/geoloqi1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/geoloqi1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_loqiwindow.cpp moc_qgeoloqi.cpp moc_serializerrunnable.cpp moc_parserrunnable.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_loqiwindow.cpp moc_qgeoloqi.cpp moc_serializerrunnable.cpp moc_parserrunnable.cpp
moc_loqiwindow.cpp: loqiwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) loqiwindow.h -o moc_loqiwindow.cpp

moc_qgeoloqi.cpp: qjson/parser.h \
		qjson/qjson_export.h \
		qjson/serializer.h \
		qgeoloqi.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) qgeoloqi.h -o moc_qgeoloqi.cpp

moc_serializerrunnable.cpp: qjson/qjson_export.h \
		qjson/serializerrunnable.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) qjson/serializerrunnable.h -o moc_serializerrunnable.cpp

moc_parserrunnable.cpp: qjson/qjson_export.h \
		qjson/parserrunnable.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) qjson/parserrunnable.h -o moc_parserrunnable.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp loqiwindow.h \
		qgeoloqi.h \
		qjson/parser.h \
		qjson/qjson_export.h \
		qjson/serializer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

loqiwindow.o: loqiwindow.cpp loqiwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o loqiwindow.o loqiwindow.cpp

qgeoloqi.o: qgeoloqi.cpp qgeoloqi.h \
		qjson/parser.h \
		qjson/qjson_export.h \
		qjson/serializer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qgeoloqi.o qgeoloqi.cpp

serializerrunnable.o: qjson/serializerrunnable.cpp qjson/serializerrunnable.h \
		qjson/qjson_export.h \
		qjson/parserrunnable.h \
		qjson/serializer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serializerrunnable.o qjson/serializerrunnable.cpp

serializer.o: qjson/serializer.cpp qjson/serializer.h \
		qjson/qjson_export.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serializer.o qjson/serializer.cpp

qobjecthelper.o: qjson/qobjecthelper.cpp qjson/qobjecthelper.h \
		qjson/qjson_export.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qobjecthelper.o qjson/qobjecthelper.cpp

parserrunnable.o: qjson/parserrunnable.cpp qjson/parserrunnable.h \
		qjson/qjson_export.h \
		qjson/parser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parserrunnable.o qjson/parserrunnable.cpp

parser.o: qjson/parser.cpp qjson/parser.h \
		qjson/qjson_export.h \
		qjson/parser_p.h \
		qjson/json_parser.hh \
		qjson/stack.hh \
		qjson/json_scanner.h \
		qjson/qjson_debug.h \
		qjson/location.hh \
		qjson/position.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parser.o qjson/parser.cpp

json_scanner.o: qjson/json_scanner.cpp qjson/qjson_debug.h \
		qjson/json_scanner.h \
		qjson/parser_p.h \
		qjson/parser.h \
		qjson/qjson_export.h \
		qjson/json_parser.hh \
		qjson/stack.hh \
		qjson/location.hh \
		qjson/position.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o json_scanner.o qjson/json_scanner.cpp

json_parser.o: qjson/json_parser.cc qjson/json_parser.hh \
		qjson/stack.hh \
		qjson/parser_p.h \
		qjson/parser.h \
		qjson/qjson_export.h \
		qjson/json_scanner.h \
		qjson/qjson_debug.h \
		qjson/location.hh \
		qjson/position.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o json_parser.o qjson/json_parser.cc

moc_loqiwindow.o: moc_loqiwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_loqiwindow.o moc_loqiwindow.cpp

moc_qgeoloqi.o: moc_qgeoloqi.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qgeoloqi.o moc_qgeoloqi.cpp

moc_serializerrunnable.o: moc_serializerrunnable.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serializerrunnable.o moc_serializerrunnable.cpp

moc_parserrunnable.o: moc_parserrunnable.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_parserrunnable.o moc_parserrunnable.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

